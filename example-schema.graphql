#Equivalent to https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#resource:-message
input PushMessage {
  #Output Only. The identifier of the message sent, in the format of projects/*/messages/{message_id}.
  name: String
  #Input only. Arbitrary key/value payload. The key should not be a reserved word ("from", "message_type", or any word starting with "google" or "gcm").
  #
  #An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
  data: Json
  #Input only. Basic notification template to use across all platforms.
  notification: PushNotification
  #Input only. Android specific options for messages sent through FCM connection server.
  android: AndroidPushNotificationConfig
  #Input only. Webpush protocol options.
  webpush: WebPushNotificationConfig
  #Input only. Apple Push Notification Service specific options.
  apns: ApnsPushNotificationConfig
  #Input only. Template for FCM SDK feature options to use across all platforms.
  fcmOptions: AndroidFCMOptions
}

"""
Basic notification template to use across all platforms.

Allows the definition of a push notification.
See Android's notification structure - https://developer.android.com/guide/topics/ui/notifiers/notifications#Templates
"""
input PushNotification {
  #First line of notification
  title: String
  #Body of the notification
  body: String
  """
  Contains the URL of an image that is going to be downloaded on the device and displayed in a notification.
  JPEG, PNG, BMP have full support across platforms. Animated GIF and video only work on iOS.
  WebP and HEIF have varying levels of support across platforms and platform versions.
  Android has 1MB image size limit
  """
  image: String
}

#Equivalent to https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#AndroidConfig
input AndroidPushNotificationConfig {
  #An identifier of a group of messages that can be collapsed, so that only the last message gets sent when delivery can be resumed. A maximum of 4 different collapse keys is allowed at any given time.
  collapseKey: String
  #Message priority. Can take "normal" and "high" values. For more information, see Setting the priority of a message https://goo.gl/GjONJv.
  priority: PushDeliveryPriority
  """
  How long (in milliseconds) the message should be kept in FCM storage if the device is offline.
  The maximum time to live supported is 4 weeks, and the default value is 4 weeks if not set.
  Set it to 0 if want to send the message immediately.
  In JSON format, the Duration type is encoded as a string rather than an object, where the string ends in the suffix "s" (indicating seconds) and is preceded by the number of seconds, with nanoseconds expressed as fractional seconds.
  For example, 3 seconds with 0 nanoseconds should be encoded in JSON format as "3s", while 3 seconds and 1 nanosecond should be expressed in JSON format as "3.000000001s".
  The ttl will be rounded down to the nearest second.

  A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
  """
  ttl: Int
  #Package name of the application where the registration token must match in order to receive the message.
  restrictedPackageName: String
  """
  If present, it will override data set onf PushNotification.

  An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
  """
  #data: Json
  #Notification to send to android devices.
  notification: AndroidPushNotification
  #Options for features provided by the FCM SDK for Android.
  fcmOptions: AndroidFCMOptions
  #If set to true, messages will be allowed to be delivered to the app while the device is in direct boot mode. See Support Direct Boot mode.
  directBootOk: Boolean
}

#Equivalent of https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#AndroidNotification
input AndroidPushNotification {
  #The notification's title. If present, it will override PushNotification's title field
  title: String
  #The notification's body. If present, it will override PushNotification's body field
  body: String
  #The notification's icon. Sets the notification icon to myicon for drawable resource myicon. If you don't send this key in the request, FCM displays the launcher icon specified in your app manifest.
  icon: String
  #The notification's icon color, expressed in #rrggbb format.
  color: String
  #The sound to play when the device receives the notification. Supports "default" or the filename of a sound resource bundled in the app. Sound files must reside in /res/raw/.
  sound: String
  #Identifier used to replace existing notifications in the notification drawer. If not specified, each request creates a new notification. If specified and a notification with the same tag is already being shown, the new notification replaces the existing one in the notification drawer.
  tag: String
  #The action associated with a user click on the notification. If specified, an activity with a matching intent filter is launched when a user clicks on the notification.
  clickAction: String
  #The key to the body string in the app's string resources to use to localize the body text to the user's current localization. See String Resources for more information.
  bodyLocKey: String
  #Variable string values to be used in place of the format specifiers in body_loc_key to use to localize the body text to the user's current localization. See Formatting and Styling for more information.
  #bodyLocArgs: [String!]
  #The key to the title string in the app's string resources to use to localize the title text to the user's current localization. See String Resources for more information.
  titleLocKey: [String!]
  #Variable string values to be used in place of the format specifiers in title_loc_key to use to localize the title text to the user's current localization. See Formatting and Styling for more information.
  #titleLocArgs: [String!]
  #The notification's channel id (new in Android O). The app must create a channel with this channel ID before any notification with this channel ID is received. If you don't send this channel ID in the request, or if the channel ID provided has not yet been created by the app, FCM uses the channel ID specified in the app manifest.
  channelId: String
  #Sets the "ticker" text, which is sent to accessibility services. Prior to API level 21 (Lollipop), sets the text that is displayed in the status bar when the notification first arrives.
  ticker: String
  #When set to false or unset, the notification is automatically dismissed when the user clicks it in the panel. When set to true, the notification persists even when the user clicks it.
  sticky: Boolean
  #Set the time that the event in the notification occurred. Notifications in the panel are sorted by this time. A point in time is represented using protobuf.Timestamp.
  #In millis
  eventTime: Int
  #Set whether or not this notification is relevant only to the current device. Some notifications can be bridged to other devices for remote display, such as a Wear OS watch. This hint can be set to recommend this notification not be bridged. See Wear OS guides
  localOnly: Boolean
  """
  Set the relative priority for this notification.
  Priority is an indication of how much of the user's attention should be consumed by this notification.
  Low-priority notifications may be hidden from the user in certain situations, while the user might be interrupted for a higher-priority notification.
  The effect of setting the same priorities may differ slightly on different platforms.
  Note this priority differs from AndroidMessagePriority.
  This priority is processed by the client after the message has been delivered, whereas PushDeliveryPriority is an FCM concept that controls when the message is delivered.
  """
  notificationPriority: AndroidPushNotificationPriority
  #If set to true, use the Android framework's default sound for the notification. Default values are specified in config.xml.
  defaultSound: String
  """
  If set to true, use the Android framework's default vibrate pattern for the notification. Default values are specified in config.xml. If default_vibrate_timings is set to true and vibrate_timings is also set, the default value is used instead of the user-specified vibrate_timings.
  """
  defaultVibrateTimings: Boolean
  """
  If set to true, use the Android framework's default LED light settings for the notification. Default values are specified in config.xml. If default_light_settings is set to true and light_settings is also set, the user-specified light_settings is used instead of the default value.
  """
  defaultLightSettings: Boolean
  """
  Set the vibration pattern to use. Pass in an array of protobuf.Duration to turn on or off the vibrator. The first value indicates the Duration to wait before turning the vibrator on. The next value indicates the Duration to keep the vibrator on. Subsequent values alternate between Duration to turn the vibrator off and to turn the vibrator on. If vibrate_timings is set and default_vibrate_timings is set to true, the default value is used instead of the user-specified vibrate_timings.
  Milliseconds
  """
  vibrateTimings: [Int]
  #Set the Notification.visibility of the notification.
  visibility: AndroidPushNotificationVisibility
  #Sets the number of items this notification represents. May be displayed as a badge count for launchers that support badging.See Notification Badge. For example, this might be useful if you're using just one notification to represent multiple new messages but you want the count here to represent the number of total new messages. If zero or unspecified, systems that support badging use the default, which is to increment a number displayed on the long-press menu each time a new notification arrives.
  notificationCount: Int
  """
  Settings to control the notification's LED blinking rate and color if LED is available on the device. The total blinking time is controlled by the OS.
  """
  lightSettings: AndroidPushNotificationLightSettings
  #Contains the URL of an image that is going to be displayed in a notification. If present, it will override PushNotification.image.
  image: String
}

enum AndroidPushNotificationVisibility {
  #Show this notification on all lockscreens, but conceal sensitive or private information on secure lockscreens.
  PRIVATE
  #Show this notification in its entirety on all lockscreens.
  PUBLIC
  #Do not reveal any part of this notification on a secure lockscreen.
  SECRET
}

enum AndroidPushNotificationPriority {
  #Lowest notification priority. Notifications with this PRIORITY_MIN might not be shown to the user except under special circumstances, such as detailed notification logs.
  MIN
  #Lower notification priority. The UI may choose to show the notifications smaller, or at a different position in the list, compared with notifications with DEFAULT.
  LOW
  #Default notification priority. If the application does not prioritize its own notifications, use this value for all notifications.
  DEFAULT
  #Higher notification priority. Use this for more important notifications or alerts. The UI may choose to show these notifications larger, or at a different position in the notification lists, compared with notifications with DEFAULT.
  HIGH
  #Highest notification priority. Use this for the application's most important items that require the user's prompt attention or input.
  MAX
}

input AndroidPushNotificationLightSettings {
  """
  Required. Along with light_off_duration, define the blink rate of LED flashes. Resolution defined by proto.Duration

  A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
  """
  lightOnDuration: Int
  """
  Required. Along with light_on_duration, define the blink rate of LED flashes. Resolution defined by proto.Duration

  A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
  """
  lightOffDuration: Int

  #todo - https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#Color
  #color: AndroidPushNotificationColor
}

input AndroidFCMOptions {
  #Label associated with the message's analytics data.
  analyticsLabel: String
}

#Equivalent to https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#ApnsConfig
input ApnsPushNotificationConfig {
  """
  HTTP request headers defined in Apple Push Notification Service. Refer to APNs request headers for supported headers, e.g. "apns-priority": "10".

  An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
  """
  headers: Json
  """
  APNs payload as a JSON object, including both aps dictionary and custom payload. See Payload Key Reference.
  If present, it overrides google.firebase.fcm.v1.Notification.title and google.firebase.fcm.v1.Notification.body.
  See https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/generating_a_remote_notification
  The Apple defined keys in the JSON are given here https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/generating_a_remote_notification#2943363
  """
  payload: ApnsPushNotification
  #Options for features provided by the FCM SDK for iOS.
  fcmOptions: ApnsFCPOptions
}

input ApnsPushNotification {
  alert: String
  #Sets the badge to be displayed with the message. Set to 0 to remove the badge. When not invoked, the badge will remain unchanged.
  badge: Int
  #Sets the notification type.
  category: String
  #Specifies whether to configure a background update notification.
  contentAvailable: Boolean
  #Specifies whether to set the mutable-content property on the message. When set, this property allows clients to modify the notification via app extensions.
  mutableContent: Boolean
  #
  threadId: String
}

input ApnsFCPOptions {
  #Label associated with the message's analytics data.
  analyticsLabel: String
  #Contains the URL of an image that is going to be displayed in a notification. If present, it will override google.firebase.fcm.v1.Notification.image.
  image: String
}

#Equivalent to https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#WebpushConfig
input WebPushNotificationConfig {
  """
  HTTP headers defined in webpush protocol. Refer to Webpush protocol for supported headers, e.g. "TTL": "15".

  An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
  """
  headers: Json
  """
  Arbitrary key/value payload. If present, it will override PushMessage.data.

  An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
  """
  data: Json
  """
  Web Notification options as a JSON object.
  Supports Notification instance properties as defined in Web Notification API https://developer.mozilla.org/en-US/docs/Web/API/Notification.
  e.g
  permission : A string representing the current permission to display notifications. Possible values are:

  denied — The user refuses to have notifications displayed.
  granted — The user accepts having notifications displayed.
  default — The user choice is unknown and therefore the browser will act as if the value were denied.
  maxActions

  The maximum number of actions supported by the device and the User Agent
  actions

  The actions array of the notification as specified in the constructor's options parameter.
  badge

  The URL of the image used to represent the notification when there is not enough space to display the notification itself.
  body

  The body string of the notification as specified in the constructor's options parameter.
  data

  Returns a structured clone of the notification's data.
  dir

  The text direction of the notification as specified in the constructor's options parameter.
  lang

  The language code of the notification as specified in the constructor's options parameter
  tag

  The ID of the notification (if any) as specified in the constructor's options parameter
  icon

  The URL of the image used as an icon of the notification as specified in the constructor's options parameter.
  image

  The URL of an image to be displayed as part of the notification, as specified in the constructor's options parameter.
  renotify

  Specifies whether the user should be notified after a new notification replaces an old one.
  requireInteraction

  A boolean value indicating that a notification should remain active until the user clicks or dismisses it, rather than closing automatically.
  silent

  Specifies whether the notification should be silent — i.e., no sounds or vibrations should be issued, regardless of the device settings.
  timestamp

  Specifies the time at which a notification is created or applicable (past, present, or future).
  title

  The title of the notification as specified in the first parameter of the constructor.
  vibrate

  Specifies a vibration pattern for devices with vibration hardware to emit.
  If present, "title" and "body" fields override google.firebase.fcm.v1.Notification.title and google.firebase.fcm.v1.Notification.body.
  """
  notification: WebPushNotification
  #Options for features provided by the FCM SDK for Web.
  fcmOptions: WebPushFCMOptions
}

input WebPushNotification {
  body: String
  image: String
  requireInteraction: Boolean
  icon: String
  tag: String
  badge: String
  language: String
  silent: Boolean
  renotify: Boolean
  timestamp: Int
  direction: WebPushDirection
}

enum WebPushDirection {
  AUTO
  LEFT_TO_RIGHT
  RIGHT_TO_LEFT
}

input WebPushFCMOptions {
  link: String
  analyticsLabel: String
}

enum PushDeliveryPriority {
  """
  Default priority for data messages.
  Normal priority messages won't open network connections on a sleeping device,
  and their delivery may be delayed to conserve the battery.
  For less time-sensitive messages, such as notifications of new email or other data to sync, choose normal delivery priority.
  """
  NORMAL
  """
  Default priority for notification messages.
  FCM attempts to deliver high priority messages immediately, allowing the FCM service to wake a sleeping device when possible and open a network connection to your app server.
  Apps with instant messaging, chat, or voice call alerts, for example, generally need to open a network connection and make sure FCM delivers the message to the device without delay.
  Set high priority if the message is time-critical and requires the user's immediate interaction, but beware that setting your messages to high priority contributes more to battery drain compared with normal priority messages.
  """
  HIGH
}
